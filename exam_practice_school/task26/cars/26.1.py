# На парковке имеется 80 мест для легковых автомобилей и 20 мест для микроавтобусов. Приезжающий на парковку автомобиль занимает любое свободное место соответствующего типа. При этом если свободных мест для легковых автомобилей нет, то легковой автомобиль занимает свободное место, предназначенное для микроавтобуса, но микроавтобус не может занять место, предназначенное для легкового автомобиля. Если подходящего места нет, автомобиль уезжает.
#
# Задание 26
#
# Входные данные
#
# Первая строка входного файла содержит целое число N  — общее количество автомобилей, в течение суток приехавших на парковку. Каждая из следующих N строк описывает один автомобиль и содержит 2 целых числа и букву. Первое число означает время в минутах с начала суток, когда автомобиль прибыл на парковку, второе  — необходимую длительность стоянки в минутах. Буква означает тип автомобиля: A  — легковой, B  — микроавтобус.
#
# Гарантируется, что никакие два автомобиля не приезжают одновременно. Если время прибытия автомобиля совпадает со временем окончания стоянки другого автомобиля, вновь прибывший автомобиль может занять освободившееся место, если оно подходит ему по типу. В ответе запишите два целых числа: сначала количество легковых автомобилей, которые смогут припарковаться, затем  — общее количество автомобилей (как легковых, так и микроавтобусов), которые уедут из-за отсутствия мест.

f = open("26 (5).txt")
n = int(f.readline())
cars =[]
places= (80 + 20) *[0]

for i in f:
    start, time, car_type = int(i.split()[0]), int(i.split()[1]), i.split()[2]
    cars.append([start, time, car_type])
cars.sort()
print(cars)
# колво легковых кот припарковались и все машины которые уехали
count_cars = 0
count_buses = 0
for i in range(len(cars)):
    if cars[i][2] == "A":
        start = 0
    else:
        start = 80
    for j in range(start, len(places)):
        if cars[i][0] >= places[j]:
            places[j] = cars[i][0] + cars[i][1]
            if cars[i][2] == "A":
                count_cars += 1
            else:
                count_buses += 1
            break
print(count_cars, n - count_buses-count_cars)

