# Для перевозки партии грузов различной массы выделен грузовик, но его грузоподъёмность ограничена, поэтому перевезти сразу все грузы не удастся.
# Грузы массой от 210 до 220 кг грузят в первую очередь, гарантируется, что все такие грузы поместятся.
# На оставшееся после этого место стараются взять как можно больше грузов. Если это можно сделать несколькими способами, выбирают тот способ,
# при котором самый большой из выбранных грузов имеет наибольшую массу.
# Если и при этом условии возможно несколько вариантов, выбирается тот, при котором наибольшую массу имеет второй по величине груз, и т. д.
# Известны количество грузов, масса каждого из них и грузоподъёмность грузовика. Необходимо определить количество и общую массу грузов,
# которые будут вывезены при погрузке по вышеописанным правилам.
#
# Входные данные.
#
# Задание 26
#
# Первая строка входного файла содержит два целых числа: N  — общее количество грузов и M  — грузоподъёмность грузовика в кг.
# Каждая из следующих N строк содержит одно целое число  — массу груза в кг.
#
# В ответе запишите два целых числа: сначала максимально возможное количество грузов, затем их общую массу.
#
# Сначала считаем в массив данные из файла.
# После этого отсортируем массив в порядке возрастания. Таким образом, последовательно складывая элементы массива с начала и,
# сравнивая сумму с размером грузоподъемности грузовика, получим максимальное количество грузов, которые могут поместиться в грузовике.
# Далее, вычитая из найденной суммы вес наибольшего груза в текущей последовательности, будем пробовать прибавлять грузы с большим весом.
# Далее такую же последовательность действий применим ко второму по величине грузу, потом к третьему и т. д.
f = open("26.2.txt")
#
colvo_gruz, gruz_capacity = map(int, f.readline().split())
gruzu = sorted(map(int, f), key = lambda x: (-(210 <= x <= 220), x))
cur_weight = []
for i in range(colvo_gruz):
    if sum(cur_weight) + gruzu[i] <= gruz_capacity:
        cur_weight.append(gruzu[i])
    elif sum(cur_weight[:-1]) + gruzu[i] < gruz_capacity:
        cur_weight = cur_weight[:-1]
        cur_weight.append(gruzu[i])
print(len(cur_weight), sum(cur_weight))
